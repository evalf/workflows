name: Build and test a Python package using Maturin
on:
  workflow_call:
jobs:
  build-source:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Maturin
        run: python -m pip install maturin
      - name: Build source tarball
        run: python -m maturin sdist
      - name: Upload source tarball
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: target/wheels
  build-and-test-binary:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - {os: ubuntu-latest, arch: x64}
          - {os: macos-latest, arch: x64}
          - {os: windows-latest, arch: x64}
          - {os: windows-latest, arch: x86}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.arch }}
      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.arch }}
          manylinux: auto
          args: --release
      - name: Install wheel
        shell: python
        run: |
          import pathlib, subprocess, sys
          wheel, = (pathlib.Path()/'target'/'wheels').glob('*.whl')
          print(f'found wheel: {wheel}')
          subprocess.check_call([sys.executable, '-m', 'pip', 'install', str(wheel)])
      - name: Test
        run: python -m unittest -bv
      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: target/wheels
  check-fmt:
    uses: ./.github/workflows/rust-check-fmt-v1.yaml
